/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * OptionDialog.java
 *
 * Created on 07.10.2011, 15:06:54
 */
package tmarker;

import java.io.File;
import javax.swing.JFileChooser;
import tmarker.TMAspot.TMAspot;

/**
 *
 * @author Peter J. Schueffler
 */
public class OptionDialog extends javax.swing.JDialog {
    
    /** Creates new form OptionDialog
     * @param parent The parent frame for this dialog box.
     * @param modal True, if this dialog should be modal
     */
    public OptionDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        jRadioButton7 = new javax.swing.JRadioButton();
        jRadioButton8 = new javax.swing.JRadioButton();
        jTextField1 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jCheckBox4 = new javax.swing.JCheckBox();
        jCheckBox5 = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton5 = new javax.swing.JRadioButton();
        jRadioButton6 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton4 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        jCheckBox2 = new javax.swing.JCheckBox();
        jLabel10 = new javax.swing.JLabel();
        jRadioButton9 = new javax.swing.JRadioButton();
        jRadioButton10 = new javax.swing.JRadioButton();
        jPanel2 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Options"); // NOI18N
        setName("Form"); // NOI18N

        jTabbedPane1.setName("jTabbedPane1"); // NOI18N

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Program Options"));
        jPanel1.setName("jPanel1"); // NOI18N
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jCheckBox1.setSelected(true);
        jCheckBox1.setText("Save all program settings on exit (settings will be restored on next program start)"); // NOI18N
        jCheckBox1.setName("jCheckBox1"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 10, 10);
        jPanel1.add(jCheckBox1, gridBagConstraints);

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("tmarker/Bundle"); // NOI18N
        jLabel2.setText(bundle.getString("OptionDialog.jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 3, 10);
        jPanel1.add(jLabel2, gridBagConstraints);

        buttonGroup3.add(jRadioButton7);
        jRadioButton7.setSelected(true);
        jRadioButton7.setText(bundle.getString("OptionDialog.jRadioButton7.text")); // NOI18N
        jRadioButton7.setToolTipText(bundle.getString("OptionDialog.jRadioButton7.toolTipText")); // NOI18N
        jRadioButton7.setName("jRadioButton7"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel1.add(jRadioButton7, gridBagConstraints);

        buttonGroup3.add(jRadioButton8);
        jRadioButton8.setText(bundle.getString("OptionDialog.jRadioButton8.text")); // NOI18N
        jRadioButton8.setToolTipText(bundle.getString("OptionDialog.jRadioButton8.toolTipText")); // NOI18N
        jRadioButton8.setName("jRadioButton8"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel1.add(jRadioButton8, gridBagConstraints);

        jTextField1.setText(((tmarker) getParent()).getProgramFolder() + File.separator + "plugins");
        jTextField1.setToolTipText(bundle.getString("OptionDialog.jTextField1.toolTipText")); // NOI18N
        jTextField1.setName("jTextField1"); // NOI18N

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, jRadioButton8, org.jdesktop.beansbinding.ELProperty.create("${selected}"), jTextField1, org.jdesktop.beansbinding.BeanProperty.create("enabled"), "jtextField1Binding");
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.2;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel1.add(jTextField1, gridBagConstraints);

        jButton3.setText(bundle.getString("OptionDialog.jButton3.text")); // NOI18N
        jButton3.setName("jButton3"); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, jRadioButton8, org.jdesktop.beansbinding.ELProperty.create("${selected}"), jButton3, org.jdesktop.beansbinding.BeanProperty.create("enabled"), "jButton3Binding");
        bindingGroup.addBinding(binding);

        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        jPanel1.add(jButton3, gridBagConstraints);

        jCheckBox4.setSelected(true);
        jCheckBox4.setText(bundle.getString("OptionDialog.jCheckBox4.text")); // NOI18N
        jCheckBox4.setToolTipText(bundle.getString("OptionDialog.jCheckBox4.toolTipText")); // NOI18N
        jCheckBox4.setName("jCheckBox4"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel1.add(jCheckBox4, gridBagConstraints);

        jCheckBox5.setSelected(true);
        jCheckBox5.setText(bundle.getString("OptionDialog.jCheckBox5.text")); // NOI18N
        jCheckBox5.setToolTipText(bundle.getString("OptionDialog.jCheckBox5.toolTipText")); // NOI18N
        jCheckBox5.setName("jCheckBox5"); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, jCheckBox4, org.jdesktop.beansbinding.ELProperty.create("${selected}"), jCheckBox5, org.jdesktop.beansbinding.BeanProperty.create("enabled"), "jCheckBox5Binding");
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        jPanel1.add(jCheckBox5, gridBagConstraints);

        jLabel3.setText(bundle.getString("OptionDialog.jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel1.add(jLabel3, gridBagConstraints);

        jTextField2.setColumns(2);
        jTextField2.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        jTextField2.setText(bundle.getString("OptionDialog.jTextField2.text")); // NOI18N
        jTextField2.setName("jTextField2"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel1.add(jTextField2, gridBagConstraints);

        jTextField3.setColumns(3);
        jTextField3.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        jTextField3.setText(bundle.getString("OptionDialog.jTextField3.text")); // NOI18N
        jTextField3.setName("jTextField3"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 10);
        jPanel1.add(jTextField3, gridBagConstraints);

        jLabel4.setText(bundle.getString("OptionDialog.jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 10);
        jPanel1.add(jLabel4, gridBagConstraints);

        jLabel5.setText("processors (" + Integer.toString(Runtime.getRuntime().availableProcessors()) + " processor" + (Runtime.getRuntime().availableProcessors() != 1 ? "s are " : " is ") + "available)");
        jLabel5.setName("jLabel5"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 10);
        jPanel1.add(jLabel5, gridBagConstraints);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText(bundle.getString("OptionDialog.jLabel6.text")); // NOI18N
        jLabel6.setName("jLabel6"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 3, 10);
        jPanel1.add(jLabel6, gridBagConstraints);

        jLabel7.setText(bundle.getString("OptionDialog.jLabel7.text")); // NOI18N
        jLabel7.setName("jLabel7"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 5);
        jPanel1.add(jLabel7, gridBagConstraints);

        jTextField4.setText(bundle.getString("OptionDialog.jTextField4.text")); // NOI18N
        jTextField4.setName("jTextField4"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel1.add(jTextField4, gridBagConstraints);

        jLabel8.setText(bundle.getString("OptionDialog.jLabel8.text")); // NOI18N
        jLabel8.setName("jLabel8"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 10, 10, 10);
        jPanel1.add(jLabel8, gridBagConstraints);

        jLabel9.setText(bundle.getString("OptionDialog.jLabel9.text")); // NOI18N
        jLabel9.setName("jLabel9"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 11);
        jPanel1.add(jLabel9, gridBagConstraints);

        jTabbedPane1.addTab(bundle.getString("OptionDialog.jPanel1.TabConstraints.tabTitle"), jPanel1); // NOI18N

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(bundle.getString("OptionDialog.jPanel3.border.title"))); // NOI18N
        jPanel3.setName("jPanel3"); // NOI18N
        jPanel3.setLayout(new java.awt.GridBagLayout());

        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setSelected(true);
        jRadioButton1.setText(bundle.getString("OptionDialog.jRadioButton1.text")); // NOI18N
        jRadioButton1.setName("jRadioButton1"); // NOI18N
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel3.add(jRadioButton1, gridBagConstraints);

        buttonGroup2.add(jRadioButton5);
        jRadioButton5.setSelected(true);
        jRadioButton5.setText(bundle.getString("OptionDialog.jRadioButton5.text")); // NOI18N
        jRadioButton5.setName("jRadioButton5"); // NOI18N
        jRadioButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton5ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel3.add(jRadioButton5, gridBagConstraints);

        buttonGroup2.add(jRadioButton6);
        jRadioButton6.setText(bundle.getString("OptionDialog.jRadioButton6.text")); // NOI18N
        jRadioButton6.setName("jRadioButton6"); // NOI18N
        jRadioButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton6ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel3.add(jRadioButton6, gridBagConstraints);

        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setText(bundle.getString("OptionDialog.jRadioButton2.text")); // NOI18N
        jRadioButton2.setName("jRadioButton2"); // NOI18N
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel3.add(jRadioButton2, gridBagConstraints);

        buttonGroup2.add(jRadioButton4);
        jRadioButton4.setText(bundle.getString("OptionDialog.jRadioButton4.text")); // NOI18N
        jRadioButton4.setName("jRadioButton4"); // NOI18N
        jRadioButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel3.add(jRadioButton4, gridBagConstraints);

        buttonGroup1.add(jRadioButton3);
        jRadioButton3.setText(bundle.getString("OptionDialog.jRadioButton3.text")); // NOI18N
        jRadioButton3.setName("jRadioButton3"); // NOI18N
        jRadioButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel3.add(jRadioButton3, gridBagConstraints);

        jLabel1.setText(bundle.getString("OptionDialog.jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 10);
        jPanel3.add(jLabel1, gridBagConstraints);

        jCheckBox2.setSelected(true);
        jCheckBox2.setText(bundle.getString("OptionDialog.jCheckBox2.text")); // NOI18N
        jCheckBox2.setToolTipText(bundle.getString("OptionDialog.jCheckBox2.toolTipText")); // NOI18N
        jCheckBox2.setName("jCheckBox2"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel3.add(jCheckBox2, gridBagConstraints);

        jLabel10.setText(bundle.getString("OptionDialog.jLabel10.text")); // NOI18N
        jLabel10.setName("jLabel10"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 10);
        jPanel3.add(jLabel10, gridBagConstraints);

        buttonGroup1.add(jRadioButton9);
        jRadioButton9.setText(bundle.getString("OptionDialog.jRadioButton9.text")); // NOI18N
        jRadioButton9.setName("jRadioButton9"); // NOI18N
        jRadioButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton9ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel3.add(jRadioButton9, gridBagConstraints);

        buttonGroup2.add(jRadioButton10);
        jRadioButton10.setText(bundle.getString("OptionDialog.jRadioButton10.text")); // NOI18N
        jRadioButton10.setName("jRadioButton10"); // NOI18N
        jRadioButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton10ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel3.add(jRadioButton10, gridBagConstraints);

        jTabbedPane1.addTab(bundle.getString("OptionDialog.jPanel3.TabConstraints.tabTitle"), jPanel3); // NOI18N

        getContentPane().add(jTabbedPane1, java.awt.BorderLayout.PAGE_START);
        jTabbedPane1.getAccessibleContext().setAccessibleDescription(bundle.getString("OptionDialog.jTabbedPane1.AccessibleContext.accessibleDescription")); // NOI18N

        jPanel2.setName("jPanel2"); // NOI18N
        jPanel2.setLayout(new java.awt.GridBagLayout());

        jButton2.setText("Restore Defaults"); // NOI18N
        jButton2.setToolTipText(bundle.getString("OptionDialog.jButton2.toolTipText")); // NOI18N
        jButton2.setName("jButton2"); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel2.add(jButton2, gridBagConstraints);

        jButton1.setText("OK"); // NOI18N
        jButton1.setName("jButton1"); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel2.add(jButton1, gridBagConstraints);

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // so far, all options have been directly adopted.
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        ((tmarker) getParent()).restoreParameterValuesDefaults();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        TMAspot ts = ((tmarker) getParent()).getVisibleTMAspot();
        if (ts != null) {
            ((tmarker) getParent()).getTMAView().repaint();
        }
        if (((tmarker) getParent()) != null) {
            ((tmarker) getParent()).repaintNucleiOnToolBar();
        }
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        TMAspot ts = ((tmarker) getParent()).getVisibleTMAspot();
        if (ts != null) {
            ((tmarker) getParent()).getTMAView().repaint();
        }
        if (((tmarker) getParent()) != null) {
            ((tmarker) getParent()).repaintNucleiOnToolBar();
        }
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void jRadioButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton3ActionPerformed
        TMAspot ts = ((tmarker) getParent()).getVisibleTMAspot();
        if (ts != null) {
            ((tmarker) getParent()).getTMAView().repaint();
        }
        if (((tmarker) getParent()) != null) {
            ((tmarker) getParent()).repaintNucleiOnToolBar();
        }
    }//GEN-LAST:event_jRadioButton3ActionPerformed

    private void jRadioButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton4ActionPerformed
        TMAspot ts = ((tmarker) getParent()).getVisibleTMAspot();
        if (ts != null) {
            ((tmarker) getParent()).getTMAView().repaint();
        }
    }//GEN-LAST:event_jRadioButton4ActionPerformed

    private void jRadioButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton5ActionPerformed
        TMAspot ts = ((tmarker) getParent()).getVisibleTMAspot();
        if (ts != null) {
            ((tmarker) getParent()).getTMAView().repaint();
        }
    }//GEN-LAST:event_jRadioButton5ActionPerformed

    private void jRadioButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton6ActionPerformed
        TMAspot ts = ((tmarker) getParent()).getVisibleTMAspot();
        if (ts != null) {
            ((tmarker) getParent()).getTMAView().repaint();
        }
    }//GEN-LAST:event_jRadioButton6ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
       JFileChooser fc = new JFileChooser(((tmarker) getParent()).getTmpDir());
       fc.setMultiSelectionEnabled(false);
       fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
       int approve = fc.showDialog(this, "Set as Plugin Folder");
       if (approve == JFileChooser.APPROVE_OPTION) {
           setLocalPluginFolder(fc.getSelectedFile().getAbsolutePath());
       }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jRadioButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton9ActionPerformed
        TMAspot ts = ((tmarker) getParent()).getVisibleTMAspot();
        if (ts != null) {
            ((tmarker) getParent()).getTMAView().repaint();
        }
        if (((tmarker) getParent()) != null) {
            ((tmarker) getParent()).repaintNucleiOnToolBar();
        }
    }//GEN-LAST:event_jRadioButton9ActionPerformed

    private void jRadioButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton10ActionPerformed
        TMAspot ts = ((tmarker) getParent()).getVisibleTMAspot();
        if (ts != null) {
            ((tmarker) getParent()).getTMAView().repaint();
        }
    }//GEN-LAST:event_jRadioButton10ActionPerformed

    /**
     * Set the shape of the goldstandard (manual) nucleus labels.
     * @param labelsShape One of TMARKER.LABELS_SHAPE_CIRCLE, LABELS_SHAPE_CROSS or LABELS_SHAPE_RECTANGLE
     */
    public void setLabelsShape_Gst(int labelsShape) {
        switch (labelsShape) {
            case tmarker.LABELS_SHAPE_CIRCLE:
                jRadioButton1.setSelected(true);
                break;
            case tmarker.LABELS_SHAPE_CROSS:
                jRadioButton2.setSelected(true);
                break;
            case tmarker.LABELS_SHAPE_CROSS_THICK:
                jRadioButton9.setSelected(true);
                break;
            default:
                jRadioButton3.setSelected(true);
                break;
        }
    }
    
    /**
     * Set the shape of the estimated (computer) nucleus labels.
     * @param labelsShape One of TMARKER.LABELS_SHAPE_CIRCLE, LABELS_SHAPE_CROSS or LABELS_SHAPE_RECTANGLE
     */
    public void setLabelsShape_Est(int labelsShape) {
        switch (labelsShape) {
            case tmarker.LABELS_SHAPE_CIRCLE:
                jRadioButton6.setSelected(true);
                break;
            case tmarker.LABELS_SHAPE_CROSS:
                jRadioButton5.setSelected(true);
                break;
            case tmarker.LABELS_SHAPE_CROSS_THICK:
                jRadioButton10.setSelected(true);
                break;
            default:
                jRadioButton4.setSelected(true);
                break;
        }
    }
    
    /**
     * Returns the shape of the goldstandard (manual) nucleus labels.
     * @return One of TMARKER.LABELS_SHAPE_CIRCLE, LABELS_SHAPE_CROSS or LABELS_SHAPE_RECTANGLE
     */
    public int getLabelsShape_Gst() {
        if (jRadioButton1.isSelected()) {
            return tmarker.LABELS_SHAPE_CIRCLE;
        } else if (jRadioButton2.isSelected()) {
            return tmarker.LABELS_SHAPE_CROSS;
        } else if (jRadioButton9.isSelected()) {
            return tmarker.LABELS_SHAPE_CROSS_THICK;
        } else {
            return tmarker.LABELS_SHAPE_RECTANGLE;
        }
    }
    
    /**
     * Returns the shape of the estimated (computer) nucleus labels.
     * @return One of TMARKER.LABELS_SHAPE_CIRCLE, LABELS_SHAPE_CROSS or LABELS_SHAPE_RECTANGLE
     */
    public int getLabelsShape_Est() {
        if (jRadioButton6.isSelected()) {
            return tmarker.LABELS_SHAPE_CIRCLE;
        } else if (jRadioButton5.isSelected()) {
            return tmarker.LABELS_SHAPE_CROSS;
        } else if (jRadioButton10.isSelected()) {
            return tmarker.LABELS_SHAPE_CROSS_THICK;
        } else {
            return tmarker.LABELS_SHAPE_RECTANGLE;
        }
    }
    
    /**
     * Returns whether or not the program parameters should be stored in an external tmarker.conf file on exit. 
     * They could then be reloaded in the next program session.
     * @return True if the program parameters should be stored on program exit.
     */
    public boolean storeParamsOnExit() {
        return jCheckBox1.isSelected();
    }
    
    /**
     * Sets whether or not the program parameters should be stored in an external tmarker.conf file on exit. 
     * They could then be reloaded in the next program session.
     * @setStoreParamsOnExit True if the program parameters should be stored on program exit.
     */
    void setStoreParamsOnExit(boolean setStoreParamsOnExit) {
        jCheckBox1.setSelected(setStoreParamsOnExit);
    }
    
    /**
     * Sets the parameter whether the plugins should be searched locally.
     * @param b True, if the plugins should be searched locally. False, if they are searched online.
     */
    public void setUseLocalPlugins(boolean b) {
        if (b) {
            jRadioButton8.setSelected(true);
        } else {
            jRadioButton7.setSelected(true);
        }
    }
    
    /**
     * Gets the parameter whether the plugins should be searched locally.
     * @return True, if the plugins should be searched locally. False, if they are searched online.
     */
    public boolean getUseLocalPlugins() {
        return jRadioButton8.isSelected();
    }
    
    
    /**
     * Sets the local folder in which the local plugins should be searched.
     * @param folder The full folder path in which the plugins (.jar files) lie.
     */
    public void setLocalPluginFolder(String folder) {
        jTextField1.setText(folder);
    }
    
    /**
     * Returns the local folder in which the local plugins should be searched.
     * @return The full folder path in which the plugins (.jar files) have to be.
     */
    public String getLocalPluginFolder() {
        return jTextField1.getText();
    }
        
    
    /**
     * Returns the number of processors that should be used (e.g. for some expensive functions and calculations).
     * @return The number of processors that can be used.
     */
    public int getParam_useNProcessors() {
        return Integer.parseInt(jTextField3.getText());
    }
    
    /**
     * Sets the number of processors that should be used (e.g. for some expensive functions and calculations).
     * @param n The number of processors that can be used.
     */
    public void setParam_useNProcessors(int n) {
        jTextField3.setText(Integer.toString(n));
    }
    
    /**
     * Whether or not an update check should be performed on program start.
     * @return True if an update check should be performed on program start.
     */
    public boolean checkForUpdatesOnStart() {
        return jCheckBox4.isSelected();
    }
    
    /**
     * Sets whether or not an update check should be performed on program start.
     * @param b True if an update check should be performed on program start.
     */
    public void setCheckForUpdatesOnStart(boolean b) {
        jCheckBox4.setSelected(b);
    }
    
    /**
     * Whether or not an update should automatically be installed. After installing,
     * it will be available after new program start.
     * @return True if an update should automatically be installed.
     */
    public boolean installUpdatesAutomatically() {
        return jCheckBox5.isSelected();
    }
    
    /**
     * Sets whether or not an update should automatically be installed.
     * @param b True if an update update should automatically be installed.
     */
    public void setInstallUpdatesAutomatically(boolean b) {
        jCheckBox5.setSelected(b);
    }
    
    /**
     * Sets whether or not manually reviewed estimated nuclei should be converted to goldstandard nuclei.
     * @param b True if manually reviewed estimated nuclei should be converted to goldstandard nuclei.
     */
    public void setAutomaticESGSConversion(boolean b) {
        jCheckBox2.setSelected(b);
    }
    
    /**
     * Whether or not manually reviewed estimated nuclei should be converted to goldstandard nuclei.
     * @return True if manually reviewed estimated nuclei should be converted to goldstandard nuclei.
     */
    public boolean isAutomaticESGSConversion() {
        return jCheckBox2.isSelected();
    }
    
    /**
     * Returns the column separator for excel files which the user has set.
     * @return Mostly ";" or ",".
     */
    public String getParam_ColumnSeparator() {
        return jTextField2.getText();
    }
    
    /**
     * Sets the column separator for excel files which the user has set.
     * @param sep Mostly ";" or ",".
     */
    public void setParam_ColumnSeparator(String sep) {
        jTextField2.setText(sep);
    }
    
    /**
     * Returns the user specified path to the OpenSlide Java library, e.g. "/usr/local/lib/openslide-java/libopenslide-jni.jnilib".
     * @return The absolute path to the OpenSlide Java library.
     */
    public String getParam_OpenSlideLibraryPath() {
        return jTextField4.getText();
    }
    
    /**
     * Sets the user specified path to the OpenSlide Java library, e.g. "/usr/local/lib/openslide-java/libopenslide-jni.jnilib".
     * @param path The absolute path to the OpenSlide Java library.
     */
    public void setParam_OpenSlideLibraryPath(String path) {
        jTextField4.setText(path);
    }
    
    /**
     * Returns the maximum heap space memory available.
     * @return The max heap space memory available for computation in byte.
     */
    public long getParam_MaxMemory() {
        return Runtime.getRuntime().maxMemory();
    }
    
    /**
     * Sets the number of processors that can be used for processing.
     * @param n The number of processors that can be used for programming.
     */
    public void setParam_NumberProcessors(int n) {
        
    }

    /**
     * Sets the maximum heap space memory available.
     * @param n The max heap space memory available for computation in byte.
     */
    public void setParam_MaxMemory(long n) {
        
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JCheckBox jCheckBox5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton10;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JRadioButton jRadioButton5;
    private javax.swing.JRadioButton jRadioButton6;
    private javax.swing.JRadioButton jRadioButton7;
    private javax.swing.JRadioButton jRadioButton8;
    private javax.swing.JRadioButton jRadioButton9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    

    
}
